//beginning of iteration loop
loop = {1,2,3,4,5,6};
RecCnt = 0;
count = 0;
flag_error = 0;
pm_map_error = Map();
currentDate = now.toText();
//sets starttime and endtime from CST to Epoch
endtime = currentDate.unixEpoch().left(10);
stime = currentDate.subDay(7).toText();
starttime = stime.unixEpoch().left(10);
criteriaText = "Truck_Status:equals:-Delivered";
//searches for truck status based on "delivered" with a zonar GPS ID
for each  ele in loop
{
	alltrucks = zoho.crm.searchRecords("Trucks",criteriaText,ele,200);
	if(alltrucks.size() == 0)
	{
		break;
	}
	for each  truck in alltrucks
	{
		distance = 0;
		gpsID = isNull(truck.get("Zonar_GPS_ID"));
		if(gpsID == false)
		{
			vin = truck.get("Name");
			info vin;
			trkID = truck.get("id");
			InserviceDate = truck.get("Lease_Start_Date");
			recordCount = 0;
			fleet = "";
			previousFleet = "";
			currentFleet = "";
			firstFuelTotal = 0;
			lastFuelTotal = 0;
			firstOdometer = "";
			lastOdometer = "";
			odometer = 0;
			mpg = 0;
			fuelTotal = 0;
			//url1 pulls in the API call with added variables VIN, starttime, and endtime
			url1 = "https://omi.zonarsystems.net/interface.php?customer=REL9300&username=abreen&password=Welcome1&action=showopen&operation=jbustrip&format=xml&start=" + starttime + "&end=" + endtime + "&vers=2&reqtype=vin&target=" + vin;
			//gets API output
			xml1 = ifnull(getUrl(url1),"");
			errCheck = xml1.contains("error");
			//info errCheck;
			if(errCheck || xml1 == "")
			{
				sendmail
				[
					from :zoho.adminuserid
					to :"it@teamrel.com"
					subject :"Odometer Update Failed on " + vin
					message :"Odometer Script Failed on " + vin + " with the follow error" + xml1 + "<br><br>"
				]
				info "Found Error";
				//send email command
			}
			//info xml1;
			recordCount = xml1.getSuffix('count="').getPrefix('"');
			//info recordCount;
			//info "before sort: " + tripList;
			xml1 = xml1.toXmlList();
			//info xml1;
			tripList = xml1.sort(false);
			//info "after sort: " + tripList;
			// 			fuelTotal = tripList.executexpath("/totals/fuel_total");
			// 			info fuelTotal;
			if(recordCount.toNumber() > 0)
			{
				final = Map();
				for each  trip in tripList
				{
					fleet = if(trip.getSuffix('fleet="').isEmpty(),"",trip.getSuffix('fleet="').getPrefix('"'));
					odometer = if(trip.getSuffix("<odometer>").getPrefix("</odometer>").isEmpty(),0,trip.getSuffix("<odometer>").getPrefix("</odometer>"));
					fuelTotal = if(trip.getSuffix("<fuel_total>").getPrefix("</fuel_total>").isEmpty(),0,trip.getSuffix("<fuel_total>").getPrefix("</fuel_total>"));
					assetList = xml1.executexpath("/jbustrip/trip/asset").toXmlList();
					assetListSort = assetList.sort(false);
					//info "assetList: " + assetListSort;
					secondCount = 0;
					for each  asset in assetListSort
					{
						secondCount = secondCount + 1;
						//info secondCount;
						if(secondCount == recordCount)
						{
							lastOdometer = if(asset.getSuffix("<odometer>").getPrefix("</odometer>").isEmpty(),0,asset.getSuffix("<odometer>").getPrefix("</odometer>"));
							lastFuelTotal = if(asset.getSuffix("<fuel_total>").getPrefix("</fuel_total>").isEmpty(),0,asset.getSuffix("<fuel_total>").getPrefix("</fuel_total>"));
							// 							info "last fuel total: " + lastFuelTotal;
							// 							info "last odometer: " + lastOdometer;
						}
						if(secondCount == 1)
						{
							firstOdometer = odometer;
							firstFuelTotal = fuelTotal;
							// 							info "first fuel total: " + firstFuelTotal;
							// 							info "first odometer: " + firstOdometer;							
						}
					}
					count = count + 1;
					info fleet;
					if(firstOdometer != "")
					{
						mpg = (firstOdometer.toNumber() / firstFuelTotal.toNumber()).round(2);
						distance = firstOdometer.toNumber() - lastOdometer.toNumber();
					}
					final.put("MPG",mpg.toNumber());
					final.put("Mileage_Driven",distance.toNumber());
					final.put("Current_Mileage",firstOdometer.toNumber());
					info final;
					//updates record with "Mileage_Driven"
					update = zoho.crm.updateRecord("Trucks",trkID,final);
					if(update.containKey("Modified_Time") == false)
					{
						pm_map_error.put("Truck_VIN",vin);
						pm_map_error.put("Error_Message",update);
						// 						info pm_map_error;
						flag_error = 1;
					}
					info update;
					pmID = zoho.crm.getRelatedRecords("Truck_PM","Trucks",trkID);
					final2 = Map();
					final2.put("Current_Mileage",firstOdometer.toNumber());
					final2.put("Solution_Center_Start_Date",InserviceDate);
					info final2;
					if(pmID.size() > 0)
					{
						//Check for no records returned
						for each  rec in pmID
						{
							pm_update = zoho.crm.updateRecord("Truck_PM",rec.get("id"),final2);
							//Update TruckPM record with Current Module.
							if(pm_update.containKey("Modified_Time") == false)
							{
								pm_map_error.put("Truck_VIN",vin);
								pm_map_error.put("Error_Message",pm_update);
								// 								info pm_map_error;
								flag_error = 1;
							}
						}
					}
					info pm_update;
				}
			}
		}
	}
}
if(flag_error == 1)
{
	sendmail
	[
		from :zoho.adminuserid
		to :"it@teamrel.com"
		subject :"Odometer Script Failed to Update"
		message :pm_map_error + "<br><br>"
	]
}
else
{
	sendmail
	[
		from :zoho.adminuserid
		to :"it@teamrel.com"
		subject :"Odometer Script Completed Update"
		message :"Odometer Script Completed Update<br><br>"
	]
}